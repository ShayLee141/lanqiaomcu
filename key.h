#ifndef __KEY_H__
#define __KEY_H__

#include <STC15F2K60S2.H>

#include "myint.h"

/* 我很不情愿地在这里写下了这么多个函数，
	 但其实比赛的时候只需要使用其中一个就行了，
	 为什么不情愿？
	 我的本意就是想让我的代码更简单易懂，
	 如果能把所有功能都整合到一个函数里，
	 再好不过了，但是做不到，
	 比赛有时考独立按键，有时考矩阵按键，
	 有时要考串口，会占用P30和P31，
	 有时候要考松手功能，有时候要考长按功能，
	 而且你也不知道下一次他会考哪几个同时结合在一起，
	 这导致一个函数写不了所有情况下的所有功能，
	 所以才很不情愿地分开写了几个函数，
	 这两个文件会有点长，望理解 */
	 
/* 如果你觉得按键不正常，
   你应该优先检查设置矩阵按键和独立按键的跳帽有没有接对，
	 再去检查频率测量那个跳帽是不是影响了（这时候可以换个按键函数），
	 以及是不是在使用串口的情况下调用了按键函数（这时候也可以换个按键函数），
	 而不是来质疑我的代码有问题 o((>ω<))o */

extern uint8_t key_value;
extern uint8_t key_state;

/* 新手简单版 */
void key_scan_simple();							//独立按键
void key_pad_scan_simple();					//矩阵按键

/* 松手检测版 */
void key_scan_release();						//独立按键
void key_pad_scan_release();				//矩阵按键

/* 串口冲突减半简单版 */
void key_pad_half_scan_simple();		//只有一半的矩阵按键

/* 串口三五双双冲突残缺简单版 */
void key_pad_remain_scan_simple();	//只有2x3大小的矩阵按键

/* 以上函数在比赛中选择最熟悉、
	 最合适的一个使用即可，
	 其他版本可以依葫芦画瓢自行研究，
	 比如“串口冲突减半松手检测版”、
	 “串口三五双双冲突残缺松手检测版”，
	 新手只需要掌握“新手简单版”，
	 对付省赛大概率是可以了，
	 而且新手简单版是基础，
	 后面的只是照着这个模板修改得到的，
	 学有余力再来研究其他版本就行了，
	 但是真的会考那么复杂的按键吗？ */

#endif
