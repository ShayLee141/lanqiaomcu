C51 COMPILER V9.60.0.0   BASE                                                              03/29/2023 20:03:33 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE BASE
OBJECT MODULE PLACED IN .\Objects\base.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE base.c OPTIMIZE(8,SPEED) BROWSE INCDIR(.\others) DEBUG OBJECTEXTEND PRIN
                    -T(.\Listings\base.lst) TABS(2) OBJECT(.\Objects\base.obj)

line level    source

   1          #include "base.h"
   2          
   3          /* NE555频率计数器 */
   4          void Timer0Init(void)
   5          {
   6   1        TMOD &= 0xF0; //定时器0模式复位
   7   1        TMOD |= 0x04; //设置为计数模式，计数引脚为P34
   8   1        TL0 = 0x00;   //复位初始值
   9   1        TH0 = 0x00;   //复位初始值
  10   1        TF0 = 0;      //清除TF0标志
  11   1        TR0 = 1;      //定时器0开始计时
  12   1      }
  13          
  14          /* ledpwm、数码管、继电器、蜂鸣器，以及各种周期延时均使用这个定时器 */
  15          void Timer1Init(void)   //100微秒@12.000MHz
  16          {
  17   1        AUXR |= 0x40;   //定时器时钟1T模式
  18   1        TMOD &= 0x0F;   //设置定时器模式
  19   1        TL1 = 0x50;   //设置定时初始值
  20   1        TH1 = 0xFB;   //设置定时初始值
  21   1        TF1 = 0;    //清除TF1标志
  22   1        TR1 = 1;    //定时器1开始计时
  23   1        ET1 = 1;
  24   1      }
  25          
  26          /*************  本地常量声明    **************/
  27          uint8_t code t_display[]={                       //标准字库
  28          //   0    1    2    3    4    5    6    7    8    9    A    B    C    D    E    F
  29              0x3F,0x06,0x5B,0x4F,0x66,0x6D,0x7D,0x07,0x7F,0x6F,0x77,0x7C,0x39,0x5E,0x79,0x71,
  30          //black  -     H    J    K    L    N    o   P    U     t    G    Q    r   M    y
  31              0x00,0x40,0x76,0x1E,0x70,0x38,0x37,0x5C,0x73,0x3E,0x78,0x3d,0x67,0x50,0x37,0x6e,
  32          //   0.   1.   2.   3.   4.   5.   6.   7.   8.   9.   -1
  33              0xBF,0x86,0xDB,0xCF,0xE6,0xED,0xFD,0x87,0xFF,0xEF,0x46};
  34          
  35          uint8_t code T_COM[]={0x01,0x02,0x04,0x08,0x10,0x20,0x40,0x80};      //位码
  36          
  37          uint8_t xdata dig_com = 0; //当前显示的数码管位
  38          uint8_t xdata dig_all[SCREEN_NUM][8] = 
  39          {
  40            { 16, 16, 16, 16, 16, 16, 16, 16, },  //黑屏界面
  41            { 25, 1, 16, 16, 16, 16, 16, 16, }, //界面1
  42            { 25, 2, 16, 16, 16, 16, 16, 16, }, //界面2
  43            { 25, 3, 16, 16, 16, 16, 16, 16, }, //界面3
  44            { 25, 4, 16, 16, 16, 16, 16, 16, }, //界面4
  45            { 25, 5, 16, 16, 16, 16, 16, 16, }, //界面5
  46            { 25, 6, 16, 16, 16, 16, 16, 16, }, //界面6
  47          };
  48          uint8_t xdata *dig = dig_all[0]; //当前显示界面
  49          uint8_t xdata dig_switch = 0xFF; //数码管每一位的开关
  50          
  51          uint8_t xdata led_state = 0; //每个led的状态
  52          uint8_t xdata led_pwm_cnt = 0;  //led的pwm计数器
  53          uint8_t xdata led_pwm_duty = 10; //led的pwm占空比，默认满占空比，占空比不能超过周期
  54          uint8_t xdata led_pwm_period = 10; //led的pwm周期（单位就是定时器的周期，这里是100us）
C51 COMPILER V9.60.0.0   BASE                                                              03/29/2023 20:03:33 PAGE 2   

  55          
  56          /* 大功率外设状态 */
  57          uint8_t xdata high_power_state = 0;
  58          
  59          /* 虚拟定时器 */
  60          uint8_t xdata Timer10ms_cnt = 0;
  61          uint8_t xdata Timer100ms_cnt = 0;
  62          uint16_t xdata Timer500ms_cnt = 0;
  63          uint16_t xdata Timer1s_cnt = 0;
  64          uint16_t xdata Timern_cnt = 0;
  65          uint16_t xdata operate_timer_cnt = 0; //操作周期定时器，用来错开每个时序操作防止时序混乱，需要根据操作的芯
             -片数量来决定定时器周期
  66          
  67          /* NE555频率 */
  68          uint16_t xdata ne555_out = 0;
  69          
  70          void Timer1Isr(void) interrupt 3 //100us一周期
  71          {
  72   1        static uint8_t Timer1ms_cnt = 10;
  73   1        static uint16_t ne555_cnt = 100; //ne555专用的定时器，可以调整采样周期
  74   1      
  75   1        { //LED_PWM
  76   2          if (led_pwm_cnt <= led_pwm_duty) //有效电平
  77   2          {
  78   3            CHANNLE(4, ~led_state);
  79   3          }
  80   2          else //无效电平
  81   2          {
  82   3            CHANNLE(4, 0xFF); //关闭LED
  83   3          }
  84   2          if (++led_pwm_cnt >= led_pwm_period)
  85   2            led_pwm_cnt = 0;
  86   2        }
  87   1        
  88   1        if (++Timer1ms_cnt >= 10) //1ms
  89   1        {
  90   2          Timer1ms_cnt = 0;
  91   2          
  92   2          Timer10ms_cnt++;
  93   2          operate_timer_cnt++;
  94   2          Timer100ms_cnt++;
  95   2          Timer500ms_cnt++;
  96   2          Timer1s_cnt++;
  97   2          Timern_cnt++;
  98   2          
  99   2          { //数码管
 100   3            CHANNLE(6, 0x00);
 101   3            CHANNLE(7, ~t_display[dig[dig_com]]); //关键步骤
 102   3            CHANNLE(6, T_COM[dig_com] & dig_switch); //关键步骤 根据这一位数码管开关来决定是否显示
 103   3            if (++dig_com >= 8)
 104   3              dig_com = 0;
 105   3          }
 106   2      
 107   2          if (++ne555_cnt >= 100)
 108   2          {
 109   3            ne555_cnt = 0;
 110   3            
 111   3            TR0 = 0;    //定时器0暂停计数
 112   3            ne555_out = TH0 << 8 | TL0;
 113   3            TL0 = 0x00; //复位初始值
 114   3            TH0 = 0x00; //复位初始值
 115   3            TR0 = 1;    //定时器0开始计数
C51 COMPILER V9.60.0.0   BASE                                                              03/29/2023 20:03:33 PAGE 3   

 116   3      //      ne555_out *= 10;
 117   3          }
 118   2          
 119   2          //大功率外设
 120   2          CHANNLE(5, high_power_state);
 121   2        }
 122   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    337    ----
   CONSTANT SIZE    =     51    ----
   XDATA SIZE       =     75    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      5    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
